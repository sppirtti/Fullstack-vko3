{"version":3,"sources":["components/PersonForm.js","components/ShowFilter.js","components/PersonAndListPeople.js","services/Persons.js","index.js"],"names":["PersonForm","props","onSubmit","morePeople","value","newName","onChange","handleNewName","newNumber","handleNewNumber","type","ShowFilter","newFilter","handleFilter","Person","name","number","onClick","removePerson","ListPeople","namesToShow","map","person","key","id","baseUrl","getAll","axios","get","newObject","post","put","delete","App","useState","persons","setPersons","setNewName","setNewNumber","setNewFilter","showAll","message","setMessage","className","setClassName","useEffect","personService","then","response","data","filter","toLowerCase","includes","event","target","preventDefault","nameObject","some","window","confirm","tmp","find","setTimeout","catch","error","concat","leftPersons","p","Notification","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2416b1a1.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n      <form onSubmit={props.morePeople}>\r\n        <div>\r\n          <p>\r\n            name: <input value={props.newName} onChange={props.handleNewName} />\r\n          </p>\r\n          <p>\r\n            number: <input value={props.newNumber} onChange={props.handleNewNumber} />\r\n          </p>\r\n  \r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n\r\n  export default PersonForm","import React from 'react'\r\n\r\nconst ShowFilter = (props) => {\r\n    return (\r\n      <div>\r\n  \r\n        filter shown with <input value={props.newFilter} onChange={props.handleFilter} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default ShowFilter","import React from 'react'\r\n\r\nconst Person = (props) => {\r\n\r\n    return (\r\n\r\n        <div >\r\n            <p>\r\n                {props.name} {props.number}\r\n                <button onClick={props.removePerson} >Delete </button>\r\n            </p>\r\n        </div >\r\n    )\r\n}\r\n\r\nconst ListPeople = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            {props.namesToShow.map((person) =>\r\n                <Person key={person.name} name={person.name} id={person.id} number={person.number} removePerson={() => props.removePerson(person)} />\r\n\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListPeople\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n}\r\n\r\nconst create = (newObject) => {\r\n    return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (id,newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nconst remove = (id) => {\r\n    axios.delete(`${baseUrl}/${id}`)\r\n    return getAll()\r\n  }\r\n\r\n\r\nexport default {\r\n    getAll: getAll,\r\n    create: create,\r\n    update: update,\r\n    remove: remove\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport PersonForm from './components/PersonForm'\nimport ShowFilter from './components/ShowFilter'\nimport ListPeople from './components/PersonAndListPeople'\nimport './index.css'\n\nimport personService from './services/Persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [showAll] = useState(false)\n  const [message, setMessage] = useState(null)\n  const [className, setClassName] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(response => {\n        setPersons(response.data)\n      })\n\n  }, [])\n\n\n  const handleNewName = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNewNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilter = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const removePerson = (person) => {\n\n    if (window.confirm(`Delete ${person.name} ?`)) {\n      personService\n        .remove(person.id)\n        .then(leftPersons => {\n          setPersons(persons.filter(p => p.id !== person.id))\n        })\n      setMessage(`Removed succesfully!`)\n      setClassName('added')\n      setTimeout(() => {\n        setMessage(null)\n        setClassName(null)\n      }, 5000)\n    }\n\n  }\n\n  const namesToShow = showAll\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n\n\n\n  const morePeople = (event) => {\n    event.preventDefault()\n\n    const nameObject = {\n      name: newName,\n      number: newNumber\n    }\n\n\n    if (persons.some(person => person.name === nameObject.name)) {\n      if (window.confirm(`Update number for ${newName} ? `)) {\n        const tmp = persons.find(tmp => tmp.name === newName)\n        personService\n          .update(tmp.id, nameObject)\n\n          .then(response => {\n            setPersons(persons.map(person => person.id !== tmp.id ? person : response.data))\n            setNewName('')\n            setNewNumber('')\n            setMessage('Updated Succesfully!')\n            setClassName('added')\n\n            setTimeout(() => {\n              setMessage(null)\n              setClassName(null)\n            }, 5000);\n          })\n          .catch(error => {\n            setMessage('Person has been deleted!')\n            setClassName('error')\n            setTimeout(() => {\n              setMessage(null)\n              setClassName(null)\n            }, 5000);\n          })\n\n      }\n\n    } else {\n\n      personService\n        .create(nameObject)\n        .then(response => {\n          setPersons(persons.concat(response.data))\n          setNewName('')\n          setNewNumber('')\n        })\n        .catch(error => {\n          setClassName('error')\n          setMessage(error.response.data.error)\n          setTimeout(() => {\n            setMessage(null)\n            setClassName(null)\n          }, 5000)\n        })\n      setMessage(\n        `${newName} added succesfully!`\n      )\n      setClassName('added')\n      setTimeout(() => {\n        setMessage(null)\n        setClassName(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={message} className={className} />\n\n      <ShowFilter newFilter={newFilter} handleFilter={handleFilter} />\n\n      <h2>Add A New Number</h2>\n\n      <PersonForm newName={newName} handleNewName={handleNewName}\n        newNumber={newNumber} handleNewNumber={handleNewNumber} morePeople={morePeople} />\n\n\n\n      <h2>Numbers</h2>\n\n      <ListPeople namesToShow={namesToShow} removePerson={removePerson} />\n    </div >\n  )\n}\n\nconst Notification = ({ message, className }) => {\n  if (message === null) {\n    return null\n  }\n  return (\n    <div className={className}>\n      {message}\n    </div>\n  )\n}\n\n\nReactDOM.render(<App />, document.getElementById('root')) "],"sourceRoot":""}